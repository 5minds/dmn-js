{"version":3,"file":"Keyboard.js","names":["event","domEvent","findSelectableAncestor","isCmd","isShift","Keyboard","constructor","config","eventBus","editorActions","cellSelection","_config","_editorActions","_eventBus","_cellSelection","_listeners","on","_destroy","_init","bindTo","bind","unbind","_registerDefaultBindings","_fire","_keyHandler","i","l","listeners","code","keyCode","charCode","preventDefault","stopPropagation","node","_node","getBinding","fire","undo","key","modifiers","trigger","redo","push","selectCellAbove","target","selectCellBelow","changed","selectedCell","getCellSelection","isDecisionNameCell","rule","addListener","listenerFn","unshift","removeListener","filter","$inject","cell"],"sources":["../../../src/features/keyboard/Keyboard.js"],"sourcesContent":["import {\n  event as domEvent\n} from 'min-dom';\n\nimport {\n  findSelectableAncestor\n} from '../cell-selection/CellSelectionUtil';\n\nimport {\n  isCmd,\n  isShift\n} from './KeyboardUtil';\n\n\n/**\n * A keyboard abstraction that may be activated and\n * deactivated by users at will, consuming key events\n * and triggering diagram actions.\n *\n * The implementation fires the following key events that allow\n * other components to hook into key handling:\n *\n *  - keyboard.bind\n *  - keyboard.unbind\n *  - keyboard.init\n *  - keyboard.destroy\n *\n * All events contain the fields (node, listeners).\n *\n * A default binding for the keyboard may be specified via the\n * `keyboard.bindTo` configuration option.\n *\n * @param {Config} config\n * @param {EventBus} eventBus\n * @param {EditorActions} editorActions\n * @param {CellSelection} cellSelection\n */\nexport default class Keyboard {\n\n  constructor(config, eventBus, editorActions, cellSelection) {\n\n    this._config = config || {};\n    this._editorActions = editorActions;\n    this._eventBus = eventBus;\n    this._cellSelection = cellSelection;\n\n    this._listeners = [];\n\n    eventBus.on('table.destroy', this._destroy);\n    eventBus.on('table.init', this._init);\n\n    eventBus.on('attach', () => {\n\n      if (this._config.bindTo) {\n        this.bind(config.bindTo);\n      }\n    });\n\n    eventBus.on('detach', this.unbind);\n  }\n\n  _init = () => {\n    this._registerDefaultBindings();\n\n    this._fire('init');\n  };\n\n  _destroy = () => {\n    this._fire('destroy');\n\n    this.unbind();\n    this._listeners = null;\n  };\n\n  // our key handler is a singleton that passes\n  // (keycode, modifiers) to each listener.\n  //\n  // listeners must indicate that they handled a key event\n  // by returning true. This stops the event propagation.\n  //\n  _keyHandler = (event) => {\n\n    var i, l,\n        listeners = this._listeners,\n        code = event.keyCode || event.charCode || -1;\n\n    for (i = 0; (l = listeners[i]); i++) {\n      if (l(code, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        return;\n      }\n    }\n  };\n\n  bind(node) {\n\n    // make sure that the keyboard is only bound once to the DOM\n    this.unbind();\n\n    this._node = node;\n\n    // bind key events\n    domEvent.bind(node, 'keydown', this._keyHandler);\n\n    this._fire('bind');\n  }\n\n  getBinding() {\n    return this._node;\n  }\n\n  unbind = () => {\n    var node = this._node;\n\n    if (node) {\n      this._fire('unbind');\n\n      // unbind key events\n      domEvent.unbind(node, 'keydown', this._keyHandler);\n    }\n\n    this._node = null;\n  };\n\n  _fire(event) {\n    this._eventBus.fire('keyboard.' + event, {\n      node: this._node,\n      listeners: this._listeners\n    });\n  }\n\n  _registerDefaultBindings() {\n\n    var listeners = this._listeners;\n\n    var editorActions = this._editorActions;\n\n    var cellSelection = this._cellSelection;\n\n    // init default listeners\n\n    // undo\n    // (CTRL|CMD) + Z\n    function undo(key, modifiers) {\n\n      if (isCmd(modifiers) && !isShift(modifiers) && key === 90) {\n        editorActions.trigger('undo');\n\n        return true;\n      }\n    }\n\n    // redo\n    // CTRL + Y\n    // CMD + SHIFT + Z\n    function redo(key, modifiers) {\n\n      if (\n        isCmd(modifiers) && (\n          key === 89 || (\n            key === 90 && isShift(modifiers)\n          )\n        )\n      ) {\n        editorActions.trigger('redo');\n\n        return true;\n      }\n    }\n\n    listeners.push(undo);\n    listeners.push(redo);\n\n\n    function selectCellAbove(key, event) {\n      if (key !== 13 || isCmd(event) || !isShift(event)) {\n        return;\n      }\n\n      if (!findSelectableAncestor(event.target)) {\n        return;\n      }\n\n      editorActions.trigger('selectCellAbove');\n\n      return true;\n    }\n\n    listeners.push(selectCellAbove);\n\n\n    function selectCellBelow(key, event) {\n\n      if (key !== 13 || isCmd(event) || isShift(event)) {\n        return;\n      }\n\n      if (!findSelectableAncestor(event.target)) {\n        return;\n      }\n\n      const changed = editorActions.trigger('selectCellBelow');\n\n      const selectedCell = cellSelection.getCellSelection();\n\n      // add new rule if no next rule\n      if (!changed && selectedCell && !isDecisionNameCell(selectedCell)) {\n        const rule = editorActions.trigger('addRule');\n\n        editorActions.trigger('selectCellBelow');\n\n        return rule;\n      }\n\n      return true;\n    }\n\n    listeners.push(selectCellBelow);\n  }\n\n\n  /**\n   * Add a listener function that is notified with (key, modifiers) whenever\n   * the keyboard is bound and the user presses a key.\n   *\n   * @param {Function} listenerFn\n   */\n  addListener(listenerFn) {\n    this._listeners.unshift(listenerFn);\n  }\n\n  removeListener(listenerFn) {\n    this._listeners = this._listeners.filter(l => l !== listenerFn);\n  }\n\n}\n\nKeyboard.$inject = [\n  'config.keyboard',\n  'eventBus',\n  'editorActions',\n  'cellSelection'\n];\n\n\n// helper /////\nfunction isDecisionNameCell(cell) {\n  return cell === '__decisionProperties_name';\n}\n"],"mappings":"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","ignoreList":[]}