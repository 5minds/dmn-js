{"version":3,"file":"DrdUpdater.js","names":["assign","inherits","remove","collectionRemove","add","collectionAdd","is","isAny","CommandInterceptor","DrdUpdater","connectionDocking","definitionPropertiesView","drdFactory","drdRules","injector","invoke","_definitionPropertiesView","_drdFactory","_drdRules","self","cropConnection","context","connection","cropped","waypoints","getCroppedWaypoints","executed","reverted","updateParent","parent","shape","target","reverseUpdateParent","oldParent","newParent","updateBounds","updateConnectionWaypoints","connectionBo","businessObject","targetBo","updateSemanticParent","newTarget","newTargetBo","oldTarget","oldTargetBo","update","$inject","prototype","bounds","di","x","y","width","height","edge","waypoint","createDiWaypoints","map","$parent","element","parentBo","updateDiParent","parentElement","decisionFromDefinitionsToDecisionService","moveDecisionFromDefinitionsToDecisionService","moveDecisionFromDecisionServiceToDefinitions","createDecisionInDecisionService","outputDecisions","get","encapsulatedDecisions","deleteIndexOutput","findIndex","decision","href","id","deleteIndexEncapsulated","splice","drgElement","outputDecisionsNew","encapsulatedDecisionsNew","outputDecision","create","encapsulatedDecision","push","containment","children","parentDi","diagram","diagramElements","Error","decisionService","_createEncapsulatedDecision","_eventuallyCreateOutputDecision","definitions","_removeOutputDecision","_removeEncapsulatedDecision","isSplit","_createOutputDecision","isOutputDecision","d"],"sources":["../../../src/features/modeling/DrdUpdater.js"],"sourcesContent":["import { assign } from 'min-dash';\n\nimport inherits from 'inherits-browser';\n\nimport {\n  remove as collectionRemove,\n  add as collectionAdd\n} from 'diagram-js/lib/util/Collections';\n\nimport {\n  is,\n  isAny\n} from 'dmn-js-shared/lib/util/ModelUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\n\n/**\n * Update DMN 1.3 information.\n */\nexport default function DrdUpdater(\n    connectionDocking,\n    definitionPropertiesView,\n    drdFactory,\n    drdRules,\n    injector\n) {\n  injector.invoke(CommandInterceptor, this);\n\n  this._definitionPropertiesView = definitionPropertiesView;\n  this._drdFactory = drdFactory;\n  this._drdRules = drdRules;\n\n  var self = this;\n\n  function cropConnection(context) {\n    var connection = context.connection,\n        cropped = context.cropped;\n\n    if (!cropped) {\n      connection.waypoints = connectionDocking.getCroppedWaypoints(connection);\n\n      context.cropped = true;\n    }\n  }\n\n  this.executed([\n    'connection.create',\n    'connection.layout'\n  ], cropConnection, true);\n\n  this.reverted([ 'connection.layout' ], function(context) {\n    delete context.cropped;\n  }, true);\n\n  function updateParent(context) {\n    var connection = context.connection,\n        parent = context.parent,\n        shape = context.shape;\n\n    if (connection && !is(connection, 'dmn:Association')) {\n      parent = connection.target;\n    }\n\n    self.updateParent(shape || connection, parent);\n  }\n\n  function reverseUpdateParent(context) {\n    var connection = context.connection,\n        shape = context.shape;\n\n    var oldParent = context.parent || context.newParent;\n\n    if (connection && !is(connection, 'dmn:Association')) {\n      oldParent = connection.target;\n    }\n\n    self.updateParent(shape || connection, oldParent);\n  }\n\n  this.executed([\n    'connection.create',\n    'connection.delete',\n    'connection.move',\n    'shape.create',\n    'shape.delete',\n    'shape.move'\n  ], updateParent, true);\n\n  this.reverted([\n    'connection.create',\n    'connection.delete',\n    'connection.move',\n    'shape.create',\n    'shape.delete'\n  ], reverseUpdateParent, true);\n\n  function updateBounds(context) {\n    var shape = context.shape;\n\n    if (!(is(shape, 'dmn:DRGElement') || is(shape, 'dmn:TextAnnotation'))) {\n      return;\n    }\n\n    self.updateBounds(shape);\n  }\n\n  this.executed([ 'shape.create', 'shape.move', 'shape.resize' ], updateBounds, true);\n\n  this.reverted([ 'shape.create', 'shape.move', 'shape.resize' ], updateBounds, true);\n\n  function updateConnectionWaypoints(context) {\n    self.updateConnectionWaypoints(context);\n  }\n\n  this.executed([\n    'connection.create',\n    'connection.layout',\n    'connection.move',\n    'connection.updateWaypoints'\n  ], updateConnectionWaypoints, true);\n\n  this.reverted([\n    'connection.create',\n    'connection.layout',\n    'connection.move',\n    'connection.updateWaypoints'\n  ], updateConnectionWaypoints, true);\n\n  this.executed('connection.create', function(context) {\n    var connection = context.connection,\n        connectionBo = connection.businessObject,\n        target = context.target,\n        targetBo = target.businessObject;\n\n    if (is(connection, 'dmn:Association')) {\n      updateParent(context);\n    } else {\n\n      // parent is target\n      self.updateSemanticParent(connectionBo, targetBo);\n    }\n  }, true);\n\n  this.reverted('connection.create', function(context) {\n    reverseUpdateParent(context);\n  }, true);\n\n  this.executed('connection.reconnect', function(context) {\n    var connection = context.connection,\n        connectionBo = connection.businessObject,\n        newTarget = context.newTarget,\n        newTargetBo = newTarget.businessObject;\n\n    if (is(connectionBo, 'dmn:Association')) {\n      return;\n    }\n\n    self.updateSemanticParent(connectionBo, newTargetBo);\n  }, true);\n\n  this.reverted('connection.reconnect', function(context) {\n    var connection = context.connection,\n        connectionBo = connection.businessObject,\n        oldTarget = context.oldTarget,\n        oldTargetBo = oldTarget.businessObject;\n\n    if (is(connectionBo, 'dmn:Association')) {\n      return;\n    }\n\n    self.updateSemanticParent(connectionBo, oldTargetBo);\n  }, true);\n\n  this.executed('element.updateProperties', function(context) {\n    definitionPropertiesView.update();\n  }, true);\n\n  this.reverted('element.updateProperties', function(context) {\n    definitionPropertiesView.update();\n  }, true);\n\n}\n\ninherits(DrdUpdater, CommandInterceptor);\n\nDrdUpdater.$inject = [\n  'connectionDocking',\n  'definitionPropertiesView',\n  'drdFactory',\n  'drdRules',\n  'injector',\n];\n\nDrdUpdater.prototype.updateBounds = function(shape) {\n  var businessObject = shape.businessObject,\n      bounds = businessObject.di.bounds;\n\n  // update bounds\n  assign(bounds, {\n    x: shape.x,\n    y: shape.y,\n    width: shape.width,\n    height: shape.height\n  });\n};\n\nDrdUpdater.prototype.updateConnectionWaypoints = function(context) {\n  var drdFactory = this._drdFactory;\n\n  var connection = context.connection,\n      businessObject = connection.businessObject,\n      edge = businessObject.di;\n\n  edge.waypoint = drdFactory.createDiWaypoints(connection.waypoints)\n    .map(function(waypoint) {\n      waypoint.$parent = edge;\n\n      return waypoint;\n    });\n};\n\nDrdUpdater.prototype.updateParent = function(element, oldParent) {\n  var parent = element.parent;\n\n  if (!is(element, 'dmn:DRGElement') && !is(element, 'dmn:Artifact')) {\n    parent = oldParent;\n  }\n\n  var businessObject = element.businessObject,\n      parentBo = parent && parent.businessObject;\n\n  this.updateSemanticParent(businessObject, parentBo, element, parent);\n\n  this.updateDiParent(businessObject.di, parentBo && parentBo.di);\n};\n\nDrdUpdater.prototype.updateSemanticParent =\nfunction(businessObject, parent, element, parentElement) {\n  if (businessObject.$parent === parent) {\n    return;\n  }\n\n  const decisionFromDefinitionsToDecisionService = is(businessObject, 'dmn:Decision')\n    && is(parent, 'dmn:DecisionService')\n    && is(businessObject.$parent, 'dmn:Definitions');\n\n  if (decisionFromDefinitionsToDecisionService) {\n    this.moveDecisionFromDefinitionsToDecisionService(\n      businessObject,\n      parent,\n      element,\n      parentElement);\n  } else if (\n    is(businessObject, 'dmn:Decision')\n    && is(parent, 'dmn:Definitions')\n    && is(businessObject.$parent, 'dmn:DecisionService')\n  ) {\n    this.moveDecisionFromDecisionServiceToDefinitions(\n      businessObject,\n      businessObject.$parent,\n      parent\n    );\n  } else if (is(businessObject, 'dmn:Decision')\n    && is(parent, 'dmn:DecisionService')\n    && !businessObject.$parent) {\n    this.createDecisionInDecisionService(\n      businessObject,\n      parent,\n      parent.$parent,\n      element,\n      parentElement\n    );\n\n    // // Creating decision in decision service\n\n    // // add to new parent (decision service)\n    // const outputDecisions = parent.get('outputDecision');\n    // const encapsulatedDecisions = parent.get('encapsulatedDecision');\n\n    // const outputDecision = this._drdFactory.create('dmn:DMNElementReference', {\n    //   href: '#' + businessObject.id\n    // });\n    // const encapsulatedDecision = this._drdFactory.create('dmn:DMNElementReference', {\n    //   href: '#' + businessObject.id\n    // });\n\n    // outputDecisions.push(outputDecision);\n    // encapsulatedDecisions.push(encapsulatedDecision);\n\n    // outputDecision.$parent = parent;\n    // encapsulatedDecision.$parent = parent;\n    // businessObject.$parent = parent;\n\n    // // add to definitions as drgElement\n    // const drgElement = parent.$parent.get('drgElement');\n    // drgElement.push(businessObject);\n  } else if (\n    is(businessObject, 'dmn:Decision')\n    && parent === null\n    && is(businessObject.$parent, 'dmn:DecisionService')\n  ) {\n\n    // Deleting decision from decision service\n\n    // remove from old parent (decision service)\n    const outputDecisions = businessObject.$parent.get('outputDecision');\n    const encapsulatedDecisions = businessObject.$parent.get('encapsulatedDecision');\n\n    const deleteIndexOutput = outputDecisions.findIndex(decision =>\n      decision.href === '#' + businessObject.id\n    );\n    const deleteIndexEncapsulated = encapsulatedDecisions.findIndex(\n      decision => decision.href === '#' + businessObject.id);\n\n    outputDecisions.splice(deleteIndexOutput, 1);\n    encapsulatedDecisions.splice(deleteIndexEncapsulated, 1);\n\n    // remove from definitions as drgElement\n    const drgElement = businessObject.$parent.$parent.get('drgElement');\n    collectionRemove(drgElement, businessObject);\n  } else if (\n    is(businessObject, 'dmn:Decision')\n    && is(parent, 'dmn:DecisionService')\n    && is(businessObject.$parent, 'dmn:DecisionService')\n    && businessObject.$parent !== parent\n  ) {\n\n    // Moving decision from decision service to another decision service\n\n    // remove from old parent (decision service)\n    const outputDecisions = businessObject.$parent.get('outputDecision');\n    const encapsulatedDecisions = businessObject.$parent.get('encapsulatedDecision');\n\n    const deleteIndexOutput = outputDecisions.findIndex(decision =>\n      decision.href === '#' + businessObject.id\n    );\n    const deleteIndexEncapsulated = encapsulatedDecisions.findIndex(\n      decision => decision.href === '#' + businessObject.id\n    );\n\n    outputDecisions.splice(deleteIndexOutput, 1);\n    encapsulatedDecisions.splice(deleteIndexEncapsulated, 1);\n\n    // add to new parent (decision service)\n    const outputDecisionsNew = parent.get('outputDecision');\n    const encapsulatedDecisionsNew = parent.get('encapsulatedDecision');\n    const outputDecision = this._drdFactory.create('dmn:DMNElementReference', {\n      href: '#' + businessObject.id\n    });\n    const encapsulatedDecision = this._drdFactory.create('dmn:DMNElementReference', {\n      href: '#' + businessObject.id\n    });\n\n    outputDecisionsNew.push(outputDecision);\n    encapsulatedDecisionsNew.push(encapsulatedDecision);\n\n    outputDecision.$parent = parent;\n    encapsulatedDecision.$parent = parent;\n    businessObject.$parent = parent;\n  } else {\n\n    // Any other case\n\n    let containment;\n\n    if (is(businessObject, 'dmn:DRGElement')) {\n      containment = 'drgElement';\n    } else if (is(businessObject, 'dmn:Artifact')) {\n      containment = 'artifact';\n    } else if (is(businessObject, 'dmn:InformationRequirement')) {\n      containment = 'informationRequirement';\n    } else if (is(businessObject, 'dmn:AuthorityRequirement')) {\n      containment = 'authorityRequirement';\n    } else if (is(businessObject, 'dmn:KnowledgeRequirement')) {\n      containment = 'knowledgeRequirement';\n    }\n\n    let children;\n\n    if (businessObject.$parent) {\n\n      // remove from old parent\n      children = businessObject.$parent.get(containment);\n\n      collectionRemove(children, businessObject);\n    }\n\n    if (parent) {\n\n      // add to new parent\n      children = parent.get(containment);\n\n      if (children) {\n        children.push(businessObject);\n\n        businessObject.$parent = parent;\n      }\n    }\n  }\n\n  // remove parent\n  if (!parent) {\n    businessObject.$parent = null;\n  }\n};\n\nDrdUpdater.prototype.updateDiParent = function(di, parentDi) {\n\n  if (di.$parent === parentDi) {\n    return;\n  }\n\n  if (isAny(di, [ 'dmndi:DMNEdge', 'dmndi:DMNShape' ])) {\n\n    var diagram = parentDi || di;\n    while (!is(diagram, 'dmndi:DMNDiagram')) {\n      diagram = diagram.$parent;\n    }\n\n    var diagramElements = diagram.get('diagramElements');\n    if (parentDi) {\n      di.$parent = diagram;\n\n      collectionAdd(diagramElements, di);\n    } else {\n      di.$parent = null;\n\n      collectionRemove(diagramElements, di);\n    }\n  } else {\n    throw new Error('unsupported');\n  }\n};\n\nDrdUpdater.prototype.moveDecisionFromDefinitionsToDecisionService =\n  function(decision, decisionService, element, parentElement) {\n    this._createEncapsulatedDecision(decision, decisionService);\n    this._eventuallyCreateOutputDecision(\n      decision,\n      decisionService,\n      element,\n      parentElement\n    );\n\n    decision.$parent = decisionService;\n  };\n\nDrdUpdater.prototype.moveDecisionFromDecisionServiceToDefinitions =\n  function(decision, decisionService, definitions) {\n    this._removeOutputDecision(decision, decisionService);\n    this._removeEncapsulatedDecision(decision, decisionService);\n    decision.$parent = definitions;\n  };\n\nDrdUpdater.prototype.createDecisionInDecisionService =\n  function(decision, decisionService, definitions, element, parentElement) {\n    this._createEncapsulatedDecision(decision, decisionService);\n    this._eventuallyCreateOutputDecision(\n      decision,\n      decisionService,\n      element,\n      parentElement\n    );\n\n    decision.$parent = decisionService;\n\n    // add to definitions as drgElement\n    const drgElement = definitions.get('drgElement');\n    drgElement.push(decision);\n  };\n\nDrdUpdater.prototype._eventuallyCreateOutputDecision = function(\n    decision,\n    decisionService,\n    element,\n    parentElement,\n) {\n  const isSplit = decisionService.isSplit;\n\n  if (!isSplit) {\n    this._createOutputDecision(decision, decisionService);\n  } else {\n    const isOutputDecision = element.y < parentElement.y + parentElement.height / 2;\n\n    if (isOutputDecision) {\n      this._createOutputDecision(decision, decisionService);\n    }\n  }\n};\n\nDrdUpdater.prototype._createOutputDecision = function(\n    decision,\n    decisionService,\n) {\n  const outputDecisions = decisionService.get('outputDecision');\n  const outputDecision = this._drdFactory.create('dmn:DMNElementReference', {\n    href: '#' + decision.id\n  });\n\n  outputDecisions.push(outputDecision);\n  outputDecision.$parent = decisionService;\n};\n\nDrdUpdater.prototype._createEncapsulatedDecision = function(decision, decisionService) {\n  const encapsulatedDecisions = decisionService.get('encapsulatedDecision');\n  const encapsulatedDecision = this._drdFactory.create('dmn:DMNElementReference', {\n    href: '#' + decision.id\n  });\n\n  encapsulatedDecisions.push(encapsulatedDecision);\n  encapsulatedDecision.$parent = decisionService;\n};\n\nDrdUpdater.prototype._removeOutputDecision = function(decision, decisionService) {\n  const outputDecisions = decisionService.get('outputDecision');\n  const deleteIndexOutput = outputDecisions.findIndex(d =>\n    d.href === '#' + decision.id\n  );\n\n  if (deleteIndexOutput < 0) {\n    return;\n  }\n\n  outputDecisions.splice(deleteIndexOutput, 1);\n};\n\nDrdUpdater.prototype._removeEncapsulatedDecision = function(decision, decisionService) {\n  const encapsulatedDecisions = decisionService.get('encapsulatedDecision');\n  const deleteIndexEncapsulated = encapsulatedDecisions.findIndex(d =>\n    d.href === '#' + decision.id\n  );\n\n  if (deleteIndexEncapsulated < 0) {\n    return;\n  }\n\n  encapsulatedDecisions.splice(deleteIndexEncapsulated, 1);\n};\n"],"mappings":"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","ignoreList":[]}