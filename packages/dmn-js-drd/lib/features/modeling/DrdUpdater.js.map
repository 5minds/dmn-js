{"version":3,"file":"DrdUpdater.js","names":["assign","inherits","remove","collectionRemove","add","collectionAdd","is","isAny","CommandInterceptor","DrdUpdater","connectionDocking","definitionPropertiesView","drdFactory","drdRules","injector","invoke","_definitionPropertiesView","_drdFactory","_drdRules","self","cropConnection","context","connection","cropped","waypoints","getCroppedWaypoints","executed","reverted","updateParent","parent","shape","target","reverseUpdateParent","oldParent","newParent","updateBounds","updateConnectionWaypoints","connectionBo","businessObject","targetBo","updateSemanticParent","newTarget","newTargetBo","oldTarget","oldTargetBo","update","$inject","prototype","bounds","di","x","y","width","height","edge","waypoint","createDiWaypoints","map","$parent","element","console","trace","parentBo","updateDiParent","children","containment","log","decisionInDecisionService","outputDecision","get","encapsulatedDecision","drgElement","deleteIndexOutput","findIndex","decision","href","id","deleteIndexEncapsulated","splice","outputDecisions","encapsulatedDecisions","create","push","parentDi","diagram","diagramElements","Error"],"sources":["../../../src/features/modeling/DrdUpdater.js"],"sourcesContent":["import { assign } from 'min-dash';\n\nimport inherits from 'inherits-browser';\n\nimport {\n  remove as collectionRemove,\n  add as collectionAdd\n} from 'diagram-js/lib/util/Collections';\n\nimport {\n  is,\n  isAny\n} from 'dmn-js-shared/lib/util/ModelUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\n\n/**\n * Update DMN 1.3 information.\n */\nexport default function DrdUpdater(\n    connectionDocking,\n    definitionPropertiesView,\n    drdFactory,\n    drdRules,\n    injector\n) {\n  injector.invoke(CommandInterceptor, this);\n\n  this._definitionPropertiesView = definitionPropertiesView;\n  this._drdFactory = drdFactory;\n  this._drdRules = drdRules;\n\n  var self = this;\n\n  function cropConnection(context) {\n    var connection = context.connection,\n        cropped = context.cropped;\n\n    if (!cropped) {\n      connection.waypoints = connectionDocking.getCroppedWaypoints(connection);\n\n      context.cropped = true;\n    }\n  }\n\n  this.executed([\n    'connection.create',\n    'connection.layout'\n  ], cropConnection, true);\n\n  this.reverted([ 'connection.layout' ], function(context) {\n    delete context.cropped;\n  }, true);\n\n  function updateParent(context) {\n    var connection = context.connection,\n        parent = context.parent,\n        shape = context.shape;\n\n    if (connection && !is(connection, 'dmn:Association')) {\n      parent = connection.target;\n    }\n\n    self.updateParent(shape || connection, parent);\n  }\n\n  function reverseUpdateParent(context) {\n    var connection = context.connection,\n        shape = context.shape;\n\n    var oldParent = context.parent || context.newParent;\n\n    if (connection && !is(connection, 'dmn:Association')) {\n      oldParent = connection.target;\n    }\n\n    self.updateParent(shape || connection, oldParent);\n  }\n\n  this.executed([\n    'connection.create',\n    'connection.delete',\n    'connection.move',\n    'shape.create',\n    'shape.delete',\n    'shape.move'\n  ], updateParent, true);\n\n  this.reverted([\n    'connection.create',\n    'connection.delete',\n    'connection.move',\n    'shape.create',\n    'shape.delete'\n  ], reverseUpdateParent, true);\n\n  function updateBounds(context) {\n    var shape = context.shape;\n\n    if (!(is(shape, 'dmn:DRGElement') || is(shape, 'dmn:TextAnnotation'))) {\n      return;\n    }\n\n    self.updateBounds(shape);\n  }\n\n  this.executed([ 'shape.create', 'shape.move', 'shape.resize' ], updateBounds, true);\n\n  this.reverted([ 'shape.create', 'shape.move', 'shape.resize' ], updateBounds, true);\n\n  function updateConnectionWaypoints(context) {\n    self.updateConnectionWaypoints(context);\n  }\n\n  this.executed([\n    'connection.create',\n    'connection.layout',\n    'connection.move',\n    'connection.updateWaypoints'\n  ], updateConnectionWaypoints, true);\n\n  this.reverted([\n    'connection.create',\n    'connection.layout',\n    'connection.move',\n    'connection.updateWaypoints'\n  ], updateConnectionWaypoints, true);\n\n  this.executed('connection.create', function(context) {\n    var connection = context.connection,\n        connectionBo = connection.businessObject,\n        target = context.target,\n        targetBo = target.businessObject;\n\n    if (is(connection, 'dmn:Association')) {\n      updateParent(context);\n    } else {\n\n      // parent is target\n      self.updateSemanticParent(connectionBo, targetBo);\n    }\n  }, true);\n\n  this.reverted('connection.create', function(context) {\n    reverseUpdateParent(context);\n  }, true);\n\n  this.executed('connection.reconnect', function(context) {\n    var connection = context.connection,\n        connectionBo = connection.businessObject,\n        newTarget = context.newTarget,\n        newTargetBo = newTarget.businessObject;\n\n    if (is(connectionBo, 'dmn:Association')) {\n      return;\n    }\n\n    self.updateSemanticParent(connectionBo, newTargetBo);\n  }, true);\n\n  this.reverted('connection.reconnect', function(context) {\n    var connection = context.connection,\n        connectionBo = connection.businessObject,\n        oldTarget = context.oldTarget,\n        oldTargetBo = oldTarget.businessObject;\n\n    if (is(connectionBo, 'dmn:Association')) {\n      return;\n    }\n\n    self.updateSemanticParent(connectionBo, oldTargetBo);\n  }, true);\n\n  this.executed('element.updateProperties', function(context) {\n    definitionPropertiesView.update();\n  }, true);\n\n  this.reverted('element.updateProperties', function(context) {\n    definitionPropertiesView.update();\n  }, true);\n\n}\n\ninherits(DrdUpdater, CommandInterceptor);\n\nDrdUpdater.$inject = [\n  'connectionDocking',\n  'definitionPropertiesView',\n  'drdFactory',\n  'drdRules',\n  'injector',\n];\n\nDrdUpdater.prototype.updateBounds = function(shape) {\n  var businessObject = shape.businessObject,\n      bounds = businessObject.di.bounds;\n\n  // update bounds\n  assign(bounds, {\n    x: shape.x,\n    y: shape.y,\n    width: shape.width,\n    height: shape.height\n  });\n};\n\nDrdUpdater.prototype.updateConnectionWaypoints = function(context) {\n  var drdFactory = this._drdFactory;\n\n  var connection = context.connection,\n      businessObject = connection.businessObject,\n      edge = businessObject.di;\n\n  edge.waypoint = drdFactory.createDiWaypoints(connection.waypoints)\n    .map(function(waypoint) {\n      waypoint.$parent = edge;\n\n      return waypoint;\n    });\n};\n\nDrdUpdater.prototype.updateParent = function(element, oldParent) {\n  var parent = element.parent;\n  console.trace('updateParent', element, oldParent, parent);\n\n  if (!is(element, 'dmn:DRGElement') && !is(element, 'dmn:Artifact')) {\n    parent = oldParent;\n  }\n\n  var businessObject = element.businessObject,\n      parentBo = parent && parent.businessObject;\n\n  this.updateSemanticParent(businessObject, parentBo);\n\n  this.updateDiParent(businessObject.di, parentBo && parentBo.di);\n};\n\nDrdUpdater.prototype.updateSemanticParent = function(businessObject, parent) {\n  var children,\n      containment;\n\n  console.log('updateSemanticParent', businessObject, parent);\n\n  if (businessObject.$parent === parent) {\n    return;\n  }\n\n  const decisionInDecisionService = is(businessObject, 'dmn:Decision')\n    &&\n    (is(parent, 'dmn:DecisionService')\n      || is(businessObject.$parent, 'dmn:DecisionService'));\n\n  if (is(businessObject, 'dmn:DRGElement')) {\n    containment = 'drgElement';\n  } else if (is(businessObject, 'dmn:Artifact')) {\n    containment = 'artifact';\n  } else if (is(businessObject, 'dmn:InformationRequirement')) {\n    containment = 'informationRequirement';\n  } else if (is(businessObject, 'dmn:AuthorityRequirement')) {\n    containment = 'authorityRequirement';\n  } else if (is(businessObject, 'dmn:KnowledgeRequirement')) {\n    containment = 'knowledgeRequirement';\n  }\n\n  if (businessObject.$parent\n    && !is(businessObject.$parent, 'dmn:Definitions')\n    && decisionInDecisionService) {\n    const outputDecision = businessObject.$parent.get('outputDecision');\n    const encapsulatedDecision = businessObject.$parent.get('encapsulatedDecision');\n    const drgElement = businessObject.$parent.$parent.get('drgElement');\n\n    const deleteIndexOutput = outputDecision.findIndex(decision =>\n      decision.href !== '#' + businessObject.id\n    );\n    const deleteIndexEncapsulated = encapsulatedDecision.findIndex(\n      decision => decision.href !== '#' + businessObject.id);\n\n    console.log('outputToDel', outputDecision[deleteIndexOutput],\n      'encapsulatedToDel', encapsulatedDecision[deleteIndexEncapsulated]);\n\n    outputDecision.splice(deleteIndexOutput, 1);\n    encapsulatedDecision.splice(deleteIndexEncapsulated, 1);\n    collectionRemove(drgElement, businessObject);\n  }\n\n  if (businessObject.$parent\n    && is(businessObject.$parent, 'dmn:Definitions')\n    && decisionInDecisionService) {\n    const outputDecision = parent.get('outputDecision');\n    const encapsulatedDecision = parent.get('encapsulatedDecision');\n\n    const deleteIndexOutput = outputDecision.findIndex(decision =>\n      decision.href !== '#' + businessObject.id\n    );\n    const deleteIndexEncapsulated = encapsulatedDecision.findIndex(\n      decision => decision.href !== '#' + businessObject.id);\n\n    console.log('outputToDel', outputDecision[deleteIndexOutput],\n      'encapsulatedToDel', encapsulatedDecision[deleteIndexEncapsulated]);\n\n    outputDecision.splice(deleteIndexOutput, 1);\n    encapsulatedDecision.splice(deleteIndexEncapsulated, 1);\n  }\n\n  if (businessObject.$parent && !decisionInDecisionService) {\n\n    // remove from old parent\n    children = businessObject.$parent.get(containment);\n\n    collectionRemove(children, businessObject);\n  }\n\n  console.log('should add to decision service',\n    parent && decisionInDecisionService && !is(parent, 'dmn:Definitions'));\n  console.log('parent', parent, 'decisionInDecisionService', decisionInDecisionService,\n    'is', is(parent, 'dmn:Definitions'));\n\n  if (parent && decisionInDecisionService && !is(parent, 'dmn:Definitions')) {\n\n    // add to new parent\n    const outputDecisions = parent.get('outputDecision');\n    const encapsulatedDecisions = parent.get('encapsulatedDecision');\n    const outputDecision = this._drdFactory.create('dmn:DMNElementReference', {\n      href: '#' + businessObject.id\n    });\n    const encapsulatedDecision = this._drdFactory.create('dmn:DMNElementReference', {\n      href: '#' + businessObject.id\n    });\n\n    outputDecisions.push(outputDecision);\n    encapsulatedDecisions.push(encapsulatedDecision);\n\n    businessObject.$parent = parent;\n    outputDecision.$parent = parent;\n    encapsulatedDecision.$parent = parent;\n\n    if (!is(businessObject.$parent, 'dmn:Definitions')) {\n      const drgElement = parent.$parent.get('drgElement');\n      drgElement.push(businessObject);\n    }\n  }\n\n  if (parent && decisionInDecisionService && is(parent, 'dmn:Definitions')) {\n    children = parent.get('drgElement');\n    children.push(businessObject);\n    businessObject.$parent = parent;\n  }\n\n  if (parent && !decisionInDecisionService) {\n\n    // add to new parent\n    children = parent.get(containment);\n\n    if (children) {\n      children.push(businessObject);\n\n      businessObject.$parent = parent;\n    }\n  }\n\n  if (!parent) {\n    businessObject.$parent = null;\n  }\n};\n\nDrdUpdater.prototype.updateDiParent = function(di, parentDi) {\n\n  if (di.$parent === parentDi) {\n    return;\n  }\n\n  if (isAny(di, [ 'dmndi:DMNEdge', 'dmndi:DMNShape' ])) {\n\n    var diagram = parentDi || di;\n    while (!is(diagram, 'dmndi:DMNDiagram')) {\n      diagram = diagram.$parent;\n    }\n\n    var diagramElements = diagram.get('diagramElements');\n    if (parentDi) {\n      di.$parent = diagram;\n\n      collectionAdd(diagramElements, di);\n    } else {\n      di.$parent = null;\n\n      collectionRemove(diagramElements, di);\n    }\n  } else {\n    throw new Error('unsupported');\n  }\n};\n"],"mappings":"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","ignoreList":[]}